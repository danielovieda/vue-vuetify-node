import Vue from"vue";import Nprogress from"nprogress";import router from"../../../router";import axios from"axios";import AppConfig from"Constants/AppConfig";import{mapGetters}from"vuex";const state={user:{},isUserSigninWithAuth0:Boolean(localStorage.getItem("isUserSigninWithAuth0")),error:{}},getters={getUser:state=>state.user,isUserSigninWithAuth0:state=>state.isUserSigninWithAuth0,error:state=>state.error},actions={setCurrentUser(context,userinfo){state.user=userinfo,console.log(state.user)},logout(context){Nprogress.start(),context.commit("logoutUser")},register(context,payload){context.commit("signupUser"),axios.post(`${AppConfig.baseURL}/users/register`,payload).then(response=>{response.data.success?(Nprogress.done(),setTimeout(()=>{context.commit("signUpUserSuccess")},500)):context.commit("signUpUserFailure",response.data.error)}).catch(err=>{context.commit("signUpUserFailure",error)})},signIn(context,payload){context.commit("loginUser"),axios.post(`${AppConfig.baseURL}/users/login`,payload).then(response=>{console.log(response),response.data.success?(Nprogress.done(),setTimeout(()=>{context.commit("loginUserSuccess",response.data)},500)):context.commit("loginUserFailure",response.data.error)}).catch(error=>{context.commit("loginUserFailure",error)})}},mutations={loginUser(state){Nprogress.start()},loginUserSuccess(state,payload){state.user=payload.user,localStorage.setItem("user",payload.user),localStorage.setItem("jwtToken",payload.token),console.log(localStorage.jwtToken),state.isUserSigninWithAuth0=!1,router.push("/horizontal/chat"),setTimeout(function(){Vue.notify({group:"loggedIn",type:"success",text:"User Logged In Success!"})},500)},loginUserFailure(state,error){state.error=error,Nprogress.done(),error.message&&Vue.notify({group:"loggedIn",type:"error",text:error.message})},logoutUser(state){state.user=null,localStorage.removeItem("user"),localStorage.removeItem("jwtToken"),Nprogress.done(),router.push("/session/login")},signUpUser(state){Nprogress.start()},signUpUserSuccess(state){Vue.notify({group:"loggedIn",type:"success",text:"축하합니다. 관리자가 허가할때까지 기다려주십시오."}),router.push("/session/login")},signUpUserFailure(state,error){Nprogress.done(),state.error=error}};export default{state:state,getters:getters,actions:actions,mutations:mutations};